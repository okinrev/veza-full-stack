#!/bin/bash

# Script de diagnostic et r√©paration Incus pour Veza
# R√©sout les probl√®mes de r√©seau et de configuration

set -e

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${PURPLE}"
echo "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ"
echo "‚îÇ    üîß Veza - Diagnostic et R√©paration   ‚îÇ"
echo "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ"
echo -e "${NC}"

# Fonction pour afficher l'√©tat actuel
show_status() {
    echo -e "${BLUE}üìä √âtat actuel du syst√®me Incus${NC}"
    echo "----------------------------------------"
    
    echo -e "${CYAN}R√©seaux :${NC}"
    incus network list
    echo ""
    
    echo -e "${CYAN}Profils :${NC}"
    incus profile list
    echo ""
    
    echo -e "${CYAN}Containers :${NC}"
    incus ls
    echo ""
}

# Fonction pour nettoyer et reconfigurer le r√©seau
fix_network() {
    echo -e "${YELLOW}üîß R√©paration de la configuration r√©seau...${NC}"
    
    # Arr√™ter le container probl√©matique
    if incus ls --format csv | grep -q "veza-postgres"; then
        echo -e "${BLUE}Arr√™t du container veza-postgres...${NC}"
        incus stop veza-postgres --force || true
    fi
    
    # V√©rifier et reconfigurer le r√©seau veza-network
    if incus network show veza-network >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ R√©seau veza-network existe${NC}"
        
        # V√©rifier la configuration DHCP
        echo -e "${BLUE}Configuration du serveur DHCP...${NC}"
        incus network set veza-network ipv4.dhcp true
        incus network set veza-network ipv4.dhcp.ranges "10.100.0.10-10.100.0.250"
        
        # Red√©marrer le r√©seau
        echo -e "${BLUE}Red√©marrage du r√©seau...${NC}"
        incus network set veza-network ipv4.nat true
        
    else
        echo -e "${RED}‚ùå R√©seau veza-network manquant, cr√©ation...${NC}"
        incus network create veza-network \
            ipv4.address=10.100.0.1/24 \
            ipv4.nat=true \
            ipv4.dhcp=true \
            ipv4.dhcp.ranges="10.100.0.10-10.100.0.250" \
            ipv6.address=none \
            dns.domain=veza.local
    fi
    
    # Reconfigurer le container
    echo -e "${BLUE}Reconfiguration du container veza-postgres...${NC}"
    
    # Supprimer l'ancienne configuration r√©seau
    incus config device remove veza-postgres eth0 || true
    
    # Ajouter la nouvelle configuration r√©seau
    incus config device add veza-postgres eth0 nic \
        network=veza-network \
        ipv4.address=10.100.0.15
    
    # D√©marrer le container
    echo -e "${BLUE}D√©marrage du container...${NC}"
    incus start veza-postgres
    
    # Attendre que le container soit compl√®tement d√©marr√©
    echo -e "${BLUE}Attente du d√©marrage complet...${NC}"
    sleep 5
    
    # Forcer l'obtention de l'IP
    echo -e "${BLUE}Configuration IP dans le container...${NC}"
    incus exec veza-postgres -- ip addr flush dev eth0 || true
    incus exec veza-postgres -- dhclient -r eth0 || true
    incus exec veza-postgres -- dhclient eth0 || true
    
    # Alternative : configuration manuelle
    if ! incus exec veza-postgres -- ip addr show eth0 | grep -q "10.100.0.15"; then
        echo -e "${YELLOW}Configuration IP manuelle...${NC}"
        incus exec veza-postgres -- ip addr add 10.100.0.15/24 dev eth0 || true
        incus exec veza-postgres -- ip route add default via 10.100.0.1 || true
    fi
}

# Fonction pour tester la connectivit√©
test_connectivity() {
    echo -e "${BLUE}üîç Tests de connectivit√©${NC}"
    echo "----------------------------------------"
    
    # Test ping vers le container
    echo -e "${CYAN}Test ping vers veza-postgres (10.100.0.15)...${NC}"
    if ping -c 2 -W 3 10.100.0.15 >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Ping r√©ussi${NC}"
    else
        echo -e "${RED}‚ùå Ping √©chou√©${NC}"
    fi
    
    # Test depuis le container vers l'h√¥te
    echo -e "${CYAN}Test depuis le container vers l'h√¥te...${NC}"
    if incus exec veza-postgres -- ping -c 2 -W 3 10.100.0.1 >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Connectivit√© container -> h√¥te OK${NC}"
    else
        echo -e "${RED}‚ùå Connectivit√© container -> h√¥te √©chou√©e${NC}"
    fi
    
    # Test de r√©solution DNS
    echo -e "${CYAN}Test de r√©solution DNS...${NC}"
    if incus exec veza-postgres -- nslookup google.com >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ DNS OK${NC}"
    else
        echo -e "${RED}‚ùå DNS √©chou√©${NC}"
    fi
}

# Fonction principale
main() {
    echo -e "${BLUE}üöÄ D√©but du diagnostic...${NC}"
    
    # Afficher l'√©tat actuel
    show_status
    
    # Demander confirmation pour la r√©paration
    echo -e "${YELLOW}üîß Voulez-vous proc√©der √† la r√©paration automatique ? (o/N)${NC}"
    read -r response
    
    if [[ "$response" =~ ^[oO][uU]?[iI]?$ ]]; then
        # Effectuer la r√©paration
        fix_network
        
        # Afficher le nouvel √©tat
        echo -e "${GREEN}üìä Nouvel √©tat apr√®s r√©paration${NC}"
        show_status
        
        # Tester la connectivit√©
        test_connectivity
        
        echo -e "${GREEN}üéâ Diagnostic et r√©paration termin√©s !${NC}"
        echo ""
        echo -e "${BLUE}üìã R√©sum√© :${NC}"
        echo -e "  ‚Ä¢ Container : ${YELLOW}veza-postgres${NC}"
        echo -e "  ‚Ä¢ IP : ${YELLOW}10.100.0.15${NC}"
        echo -e "  ‚Ä¢ R√©seau : ${YELLOW}veza-network (10.100.0.0/24)${NC}"
        echo ""
        echo -e "${CYAN}üí° Commandes utiles :${NC}"
        echo -e "  ‚Ä¢ √âtat : ${YELLOW}incus ls${NC}"
        echo -e "  ‚Ä¢ Logs : ${YELLOW}incus info veza-postgres${NC}"
        echo -e "  ‚Ä¢ Shell : ${YELLOW}incus exec veza-postgres -- bash${NC}"
        
    else
        echo -e "${YELLOW}Diagnostic seulement - aucune modification effectu√©e${NC}"
    fi
}

# V√©rifier qu'Incus est disponible
if ! command -v incus &> /dev/null; then
    echo -e "${RED}‚ùå Incus n'est pas install√© ou accessible${NC}"
    exit 1
fi

# Ex√©cuter le diagnostic
main 