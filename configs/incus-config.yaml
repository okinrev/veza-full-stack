# Configuration Incus pour l'Architecture Veza
# 8 containers : Frontend, Backend, Chat, Stream, PostgreSQL, HAProxy, Redis, FileSystem

# =============================================================================
# Réseau Veza
# =============================================================================
networks:
  veza-network:
    type: bridge
    config:
      ipv4.address: 10.100.0.1/24
      ipv4.nat: true
      ipv6.address: none
      dns.domain: veza.local

# =============================================================================
# Profils de base
# =============================================================================
profiles:
  # Profil de base pour tous les containers Veza
  veza-base:
    config:
      limits.cpu: "2"
      limits.memory: 2GB
      security.nesting: true
      security.privileged: false
    devices:
      eth0:
        type: nic
        network: veza-network
      root:
        type: disk
        path: /
        pool: default
        size: 20GB

  # Profil pour les services applicatifs
  veza-app:
    extends: veza-base
    config:
      limits.cpu: "4"
      limits.memory: 4GB
    devices:
      logs:
        type: disk
        source: /home/senke/Documents/veza-full-stack/logs
        path: /app/logs

  # Profil pour la base de données
  veza-database:
    extends: veza-base
    config:
      limits.cpu: "4"
      limits.memory: 8GB
    devices:
      data:
        type: disk
        source: /home/senke/Documents/veza-full-stack/data/postgres
        path: /var/lib/postgresql/data

  # Profil pour le système de fichiers
  veza-storage:
    extends: veza-base
    config:
      limits.cpu: "2"
      limits.memory: 4GB
    devices:
      uploads:
        type: disk
        source: /home/senke/Documents/veza-full-stack/uploads
        path: /storage/uploads
      audio:
        type: disk
        source: /home/senke/Documents/veza-full-stack/audio
        path: /storage/audio

# =============================================================================
# Containers Configuration
# =============================================================================
containers:
  # 1. Frontend React Container
  veza-frontend:
    image: ubuntu:22.04
    profiles: [veza-app]
    config:
      limits.memory: 2GB
      environment.NODE_ENV: development
      environment.VITE_API_URL: http://10.100.0.12:8080/api/v1
      environment.VITE_WS_CHAT_URL: ws://10.100.0.13:8081/ws
      environment.VITE_WS_STREAM_URL: ws://10.100.0.14:8082/ws
    devices:
      frontend-src:
        type: disk
        source: /home/senke/Documents/veza-full-stack/veza-frontend
        path: /app/frontend
    networks:
      eth0:
        ipv4.address: 10.100.0.11

  # 2. Backend API Go Container  
  veza-backend:
    image: ubuntu:22.04
    profiles: [veza-app]
    config:
      environment.DATABASE_URL: postgres://veza_user:veza_password@10.100.0.15:5432/veza_db?sslmode=disable
      environment.REDIS_URL: redis://10.100.0.17:6379
      environment.JWT_SECRET: your-super-secret-jwt-key-change-in-production
      environment.PORT: 8080
      environment.CHAT_SERVER_URL: http://10.100.0.13:8081
      environment.STREAM_SERVER_URL: http://10.100.0.14:8082
    devices:
      backend-src:
        type: disk
        source: /home/senke/Documents/veza-full-stack/veza-backend-api
        path: /app/backend
      uploads-access:
        type: disk
        source: /home/senke/Documents/veza-full-stack/uploads
        path: /app/uploads
    networks:
      eth0:
        ipv4.address: 10.100.0.12

  # 3. Chat Server Rust Container
  veza-chat:
    image: ubuntu:22.04
    profiles: [veza-app]
    config:
      environment.DATABASE_URL: postgres://veza_user:veza_password@10.100.0.15:5432/veza_db?sslmode=disable
      environment.REDIS_URL: redis://10.100.0.17:6379
      environment.JWT_SECRET: your-super-secret-jwt-key-change-in-production
      environment.PORT: 8081
      environment.RUST_LOG: chat_server=debug,tower_http=debug
    devices:
      chat-src:
        type: disk
        source: /home/senke/Documents/veza-full-stack/veza-chat-server
        path: /app/chat
    networks:
      eth0:
        ipv4.address: 10.100.0.13

  # 4. Stream Server Rust Container
  veza-stream:
    image: ubuntu:22.04
    profiles: [veza-app]
    config:
      environment.DATABASE_URL: postgres://veza_user:veza_password@10.100.0.15:5432/veza_db?sslmode=disable
      environment.REDIS_URL: redis://10.100.0.17:6379
      environment.JWT_SECRET: your-super-secret-jwt-key-change-in-production
      environment.PORT: 8082
      environment.AUDIO_DIR: /storage/audio
      environment.RUST_LOG: stream_server=debug,tower_http=debug
      environment.ALLOWED_ORIGINS: http://10.100.0.11:5173,http://10.100.0.16
    devices:
      stream-src:
        type: disk
        source: /home/senke/Documents/veza-full-stack/veza-stream-server
        path: /app/stream
      audio-access:
        type: disk
        source: /home/senke/Documents/veza-full-stack/audio
        path: /storage/audio
    networks:
      eth0:
        ipv4.address: 10.100.0.14

  # 5. PostgreSQL Database Container
  veza-postgres:
    image: ubuntu:22.04
    profiles: [veza-database]
    config:
      environment.POSTGRES_DB: veza_db
      environment.POSTGRES_USER: veza_user
      environment.POSTGRES_PASSWORD: veza_password
      environment.PGDATA: /var/lib/postgresql/data
    devices:
      db-init:
        type: disk
        source: /home/senke/Documents/veza-full-stack/init-db.sql
        path: /docker-entrypoint-initdb.d/init-db.sql
      db-migrate:
        type: disk
        source: /home/senke/Documents/veza-full-stack/migrate-existing-db.sql
        path: /docker-entrypoint-initdb.d/migrate-existing-db.sql
    networks:
      eth0:
        ipv4.address: 10.100.0.15

  # 6. HAProxy Load Balancer Container
  veza-haproxy:
    image: ubuntu:22.04
    profiles: [veza-app]
    config:
      limits.memory: 1GB
    devices:
      haproxy-config:
        type: disk
        source: /home/senke/Documents/veza-full-stack/haproxy.cfg
        path: /usr/local/etc/haproxy/haproxy.cfg
      ssl-certs:
        type: disk
        source: /home/senke/Documents/veza-full-stack/ssl
        path: /etc/ssl/certs
    networks:
      eth0:
        ipv4.address: 10.100.0.16
    ports:
      - host: 80
        container: 80
      - host: 443
        container: 443
      - host: 8404
        container: 8404

  # 7. Redis Cache Container
  veza-redis:
    image: ubuntu:22.04
    profiles: [veza-base]
    config:
      limits.memory: 1GB
    devices:
      redis-data:
        type: disk
        source: /home/senke/Documents/veza-full-stack/data/redis
        path: /data
    networks:
      eth0:
        ipv4.address: 10.100.0.17

  # 8. File System Container (NFS/Storage)
  veza-storage:
    image: ubuntu:22.04
    profiles: [veza-storage]
    config:
      security.privileged: true  # Nécessaire pour NFS
    devices:
      backups:
        type: disk
        source: /home/senke/Documents/veza-full-stack/backups
        path: /storage/backups
    networks:
      eth0:
        ipv4.address: 10.100.0.18

# =============================================================================
# Configuration de déploiement
# =============================================================================
deployment:
  order:
    - veza-postgres
    - veza-redis
    - veza-storage
    - veza-backend
    - veza-chat
    - veza-stream
    - veza-frontend
    - veza-haproxy

  dependencies:
    veza-backend: [veza-postgres, veza-redis]
    veza-chat: [veza-postgres, veza-redis]
    veza-stream: [veza-postgres, veza-redis, veza-storage]
    veza-frontend: [veza-backend]
    veza-haproxy: [veza-frontend, veza-backend, veza-chat, veza-stream]

# =============================================================================
# Monitoring et Health Checks
# =============================================================================
monitoring:
  health_checks:
    veza-postgres:
      command: "pg_isready -U veza_user -d veza_db"
      interval: 30s
    veza-redis:
      command: "redis-cli ping"
      interval: 30s
    veza-backend:
      url: "http://10.100.0.12:8080/health"
      interval: 30s
    veza-chat:
      url: "http://10.100.0.13:8081/health"
      interval: 30s
    veza-stream:
      url: "http://10.100.0.14:8082/health"
      interval: 30s
    veza-frontend:
      url: "http://10.100.0.11:5173"
      interval: 60s
    veza-haproxy:
      url: "http://10.100.0.16:8404/stats"
      interval: 30s 