#!/bin/bash

echo "üîß Correction et diagnostic WebSocket Veza"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"

# 1. V√©rification de la configuration HAProxy
echo ""
echo "üìã 1. V√©rification configuration HAProxy WebSocket:"
if incus exec veza-haproxy -- grep -q "server websocket1 10.5.191.241:8080" /etc/haproxy/haproxy.cfg; then
    echo "  ‚úÖ WebSocket correctement rout√© vers backend Go (10.5.191.241:8080)"
else
    echo "  üîß Correction routage WebSocket..."
    
    # Sauvegarde et correction
    cp configs/haproxy.cfg temp_haproxy_ws.cfg
    sed -i 's/server websocket1 10.5.191.49:3001/server websocket1 10.5.191.241:8080/' temp_haproxy_ws.cfg
    sed -i 's/server websocket1 10.5.191.241:9001/server websocket1 10.5.191.241:8080/' temp_haproxy_ws.cfg
    
    incus file push temp_haproxy_ws.cfg veza-haproxy/etc/haproxy/haproxy.cfg
    incus exec veza-haproxy -- systemctl reload haproxy
    rm temp_haproxy_ws.cfg
    echo "  ‚úÖ HAProxy WebSocket corrig√© et recharg√©"
fi

# 2. Test des services
echo ""
echo "üì° 2. Test des services WebSocket:"

# Test backend Go WebSocket
WS_STATUS=$(curl -m 3 -s -o /dev/null -w '%{http_code}' "http://10.5.191.241:8080/ws/chat" 2>/dev/null || echo "000")
if [ "$WS_STATUS" = "401" ]; then
    echo "  ‚úÖ Backend Go WebSocket: OK (401 = authentification requise)"
elif [ "$WS_STATUS" = "404" ]; then
    echo "  ‚ùå Backend Go WebSocket: Route non trouv√©e (404)"
else
    echo "  ‚ö†Ô∏è Backend Go WebSocket: Status $WS_STATUS"
fi

# Test via HAProxy
HAP_STATUS=$(curl -m 3 -s -o /dev/null -w '%{http_code}' "http://10.5.191.133/ws/chat" 2>/dev/null || echo "000")
if [ "$HAP_STATUS" = "401" ]; then
    echo "  ‚úÖ HAProxy WebSocket: OK (401 = authentification requise)"
elif [ "$HAP_STATUS" = "404" ]; then
    echo "  ‚ùå HAProxy WebSocket: Route non trouv√©e (404)"
else
    echo "  ‚ö†Ô∏è HAProxy WebSocket: Status $HAP_STATUS"
fi

# 3. V√©rification des processus
echo ""
echo "üîç 3. V√©rification des processus:"

BACKEND_PROC=$(incus exec veza-backend -- ps aux | grep -c "/opt/veza/server" || echo "0")
if [ "$BACKEND_PROC" -gt "0" ]; then
    echo "  ‚úÖ Backend Go actif ($BACKEND_PROC processus)"
else
    echo "  ‚ùå Backend Go non actif"
    echo "  üîß Red√©marrage du backend..."
    incus exec veza-backend -- systemctl restart veza-api 2>/dev/null || echo "  ‚ö†Ô∏è Pas de service systemd"
fi

# 4. Test de l'application
echo ""
echo "üåê 4. Test application web:"
APP_STATUS=$(curl -m 3 -s -o /dev/null -w '%{http_code}' "http://10.5.191.133" 2>/dev/null || echo "000")
if [ "$APP_STATUS" = "200" ]; then
    echo "  ‚úÖ Application web accessible (200)"
else
    echo "  ‚ùå Application web: Status $APP_STATUS"
fi

# 5. Conseils
echo ""
echo "üí° 5. Instructions pour tester:"
echo "  ‚Ä¢ Rafra√Æchissez votre navigateur (F5 ou Ctrl+R)"
echo "  ‚Ä¢ Les erreurs WebSocket 401 sont normales - l'auth est g√©r√©e c√¥t√© frontend"
echo "  ‚Ä¢ URL application: http://10.5.191.133"
echo "  ‚Ä¢ Les WebSockets se connectent apr√®s login r√©ussi"

echo ""
echo "üéâ Correction WebSocket termin√©e !" 